services:
  db:
    image: postgres:16-alpine
    container_name: obsinity-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    # no host port mapping for Postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - obsinity_pg:/var/lib/postgresql/data

  app:
    build:
      context: ..
      dockerfile: obsinity-reference-service/Dockerfile
    container_name: obsinity-reference-server
    restart: unless-stopped
    environment:
      SERVER_PORT: 8086
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_FLYWAY_ENABLED: ${FLYWAY_ENABLED}
      LOGGING_LEVEL_ROOT: ${SPRING_LOG_LEVEL}
    ports:
      - "${APP_PORT_REFERENCE:-8086}:8086"   # expose host 8086 -> container 8086
    depends_on:
      db:
        condition: service_healthy

volumes:
  obsinity_pg:
    driver: local
