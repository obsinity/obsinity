_type: export
__export_format: 4
__export_date: 2025-09-23T10:10:00.000Z
__export_source: insomnia.desktop.app:v11.4.0

resources:
  # ===================== Workspace =====================
  - _id: wrk_68f2907246df440f96e2f024b4a89fee
    parentId: null
    modified: 1754511487081
    created: 1754511487081
    name: Obsinity API Collection
    description: >
      Obsinity reference service (HTTP only) with publish_event (single/homogeneous batch),
      Search API examples, and Catalog helpers. Bodies follow Obsinity/OTEL-style nested JSON
      (resource, trace, time, attributes.http.status_code, attributes.obsinity.correlation_id).
    scope: collection
    _type: workspace

  # ===================== Environment =====================
  - _id: env_48ee75400dc54513958ace253d876e61
    parentId: wrk_68f2907246df440f96e2f024b4a89fee
    modified: 1754639228167
    created: 1753721379025
    name: Base Environment
    data:
      base_url: http://localhost:8086

      # Service/Resource defaults
      service_id: payments
      service_namespace: core
      service_instance_id: local-1
      service_version: 1.0.0
      host_name: devhost
      sdk_name: obsinity-java-sdk
      sdk_version: 0.1.0
      cloud_provider: local
      cloud_region: local-dev

      # Event defaults
      event_name: http_request

      # Config defaults
      config_snapshot_id: local-snapshot
      config_metric_name: request_latency
      config_metric_unit: milliseconds

      # Dynamic helpers
      nowIso: "{% now 'iso-8601', 'utc' %}"
      correlation_id: "{% uuid 'v4' %}"
      trace_id: "{% uuid 'v4' %}"
      span_id: "{% uuid 'v4' %}"
      span_id_2: "{% uuid 'v4' %}"
      span_id_error: "{% uuid 'v4' %}"
      event_id: "{% uuid 'v4' %}"
      event_id_1: "{% uuid 'v4' %}"
      event_id_2: "{% uuid 'v4' %}"
      event_id_error: "{% uuid 'v4' %}"
    _type: environment

  # ===================== Cookie Jar =====================
  - _id: jar_a149c3669a9047f3aef00b245c81d669
    parentId: wrk_68f2907246df440f96e2f024b4a89fee
    created: 1753721379030
    modified: 1753721379030
    name: Default Jar
    cookies: []
    _type: cookie_jar

  # ===================== Request Groups (flat) =====================
  - _id: fld_publish
    parentId: wrk_68f2907246df440f96e2f024b4a89fee
    created: 1754511488000
    modified: 1754511488000
    name: Publish
    _type: request_group

  - _id: fld_search
    parentId: wrk_68f2907246df440f96e2f024b4a89fee
    created: 1754511488001
    modified: 1754511488001
    name: Search
    _type: request_group

  - _id: fld_catalog
    parentId: wrk_68f2907246df440f96e2f024b4a89fee
    created: 1754511488002
    modified: 1754511488002
    name: Catalog
    _type: request_group

  - _id: fld_objql
    parentId: wrk_68f2907246df440f96e2f024b4a89fee
    created: 1754511488004
    modified: 1754511488004
    name: OBJQL
    _type: request_group

  - _id: fld_admin
    parentId: wrk_68f2907246df440f96e2f024b4a89fee
    created: 1754511488005
    modified: 1754511488005
    name: Admin
    _type: request_group

  - _id: fld_system
    parentId: wrk_68f2907246df440f96e2f024b4a89fee
    created: 1754511488003
    modified: 1754511488003
    name: System
    _type: request_group

  # ===================== Publish =====================
  - _id: req_publish_event_ok
    parentId: fld_publish
    created: 1754511489000
    modified: 1754511489000
    name: publish_event (OK - body routed)
    description: Publish a single event (nested attributes, OTEL aware).
    method: POST
    url: "{{ base_url }}/events/publish"
    body:
      mimeType: application/json
      text: |
        {
          "event": { "name": "{{ event_name }}", "kind": "SERVER" },
          "resource": {
            "service": {
              "name": "{{ service_id }}",
              "namespace": "{{ service_namespace }}",
              "instance": { "id": "{{ service_instance_id }}" },
              "version": "{{ service_version }}"
            },
            "host": { "name": "{{ host_name }}" },
            "telemetry": { "sdk": { "name": "{{ sdk_name }}", "version": "{{ sdk_version }}" } },
            "cloud": { "provider": "{{ cloud_provider }}", "region": "{{ cloud_region }}" }
          },
          "trace": { "traceId": "{{ trace_id }}", "spanId": "{{ span_id }}" },
          "time": {
            "startedAt": "{{ nowIso }}",
            "endedAt": "{{ nowIso }}",
            "startUnixNano": 0,
            "endUnixNano": 0
          },
          "attributes": {
            "api":  { "name": "getAccountHolders", "version": "v2" },
            "http": { "method": "GET", "status_code": 200, "route": "/v2/account-holders", "flavor": "1.1" },
            "obsinity": { "correlation_id": "{{ correlation_id }}" }
          },
          "events": [],
          "links": [],
          "status": { "code": "OK", "message": "" },
          "synthetic": false
        }
    headers:
      - name: Content-Type
        value: application/json
    _type: request

  - _id: req_publish_event_err
    parentId: fld_publish
    created: 1754511489001
    modified: 1754511489001
    name: publish_event (ERROR - body routed)
    description: Error variant.
    method: POST
    url: "{{ base_url }}/events/publish"
    body:
      mimeType: application/json
      text: |
        {
          "event": { "name": "{{ event_name }}", "kind": "SERVER" },
          "resource": {
            "service": {
              "name": "{{ service_id }}",
              "namespace": "{{ service_namespace }}",
              "instance": { "id": "{{ service_instance_id }}" },
              "version": "{{ service_version }}" },
            "host": { "name": "{{ host_name }}" },
            "telemetry": { "sdk": { "name": "{{ sdk_name }}", "version": "{{ sdk_version }}" } },
            "cloud": { "provider": "{{ cloud_provider }}", "region": "{{ cloud_region }}" }
          },
          "trace": { "traceId": "{{ trace_id }}", "spanId": "{{ span_id_error }}" },
          "time": {
            "startedAt": "{{ nowIso }}",
            "endedAt": "{{ nowIso }}",
            "startUnixNano": 0,
            "endUnixNano": 0
          },
          "attributes": {
            "api":  { "name": "createTransaction", "version": "v2" },
            "http": { "method": "POST", "status_code": 500, "route": "/v2/transactions", "flavor": "1.1" },
            "obsinity": { "correlation_id": "{{ correlation_id }}" }
          },
          "events": [],
          "links": [],
          "status": { "code": "ERROR", "message": "Server error" },
          "synthetic": false
        }
    headers:
      - name: Content-Type
        value: application/json
    _type: request

  - _id: req_publish_event_batch
    parentId: fld_publish
    created: 1754511489002
    modified: 1754511489002
    name: publish_event (BATCH homogeneous - body routed)
    description: Batch for a single event type from URI.
    method: POST
    url: "{{ base_url }}/events/publish/batch"
    body:
      mimeType: application/json
      text: |
        [
          {
            "event": { "name": "{{ event_name }}", "kind": "CLIENT" },
            "resource": {
              "service": {
                "name": "{{ service_id }}",
                "namespace": "{{ service_namespace }}",
                "instance": { "id": "{{ service_instance_id }}" },
                "version": "{{ service_version }}"
              },
              "host": { "name": "{{ host_name }}" },
              "telemetry": { "sdk": { "name": "{{ sdk_name }}", "version": "{{ sdk_version }}" } },
              "cloud": { "provider": "{{ cloud_provider }}", "region": "{{ cloud_region }}" }
            },
            "trace": { "traceId": "{{ trace_id }}", "spanId": "{{ span_id }}" },
            "time": { "startedAt": "{{ nowIso }}", "endedAt": "{{ nowIso }}", "startUnixNano": 0, "endUnixNano": 0 },
            "attributes": {
              "api":  { "name": "lookupUser" },
              "http": { "status_code": 200, "method": "GET" },
              "obsinity": { "correlation_id": "{{ correlation_id }}" }
            },
            "events": [],
            "links": [],
            "status": { "code": "OK", "message": "" },
            "synthetic": false
          },
          {
            "event": { "name": "{{ event_name }}", "kind": "INTERNAL" },
            "resource": {
              "service": {
                "name": "{{ service_id }}",
                "namespace": "{{ service_namespace }}",
                "instance": { "id": "{{ service_instance_id }}" },
                "version": "{{ service_version }}" }
            },
            "trace": { "traceId": "{{ trace_id }}", "spanId": "{{ span_id_2 }}" },
            "time": { "startedAt": "{{ nowIso }}", "endedAt": "{{ nowIso }}", "startUnixNano": 0, "endUnixNano": 0 },
            "attributes": {
              "db": { "system": "postgresql", "statement": "select 1" },
              "obsinity": { "correlation_id": "{{ correlation_id }}" }
            },
            "events": [],
            "links": [],
            "status": { "code": "OK", "message": "" },
            "synthetic": false
          }
        ]
    headers:
      - name: Content-Type
        value: application/json
    _type: request

  # ===================== Search =====================
  - _id: req_search_exact_and
    parentId: fld_search
    created: 1754511489100
    modified: 1754511489100
    name: Search - Exact match (AND)
    description: payments http_request where api.name and http.status_code match in last 1h
    method: POST
    url: "{{ base_url }}/api/search/events"
    body:
      mimeType: application/json
      text: |
        {
          "service": "{{ service_id }}",
          "event": "{{ event_name }}",
          "period": { "previous": "-1h" },
          "match": {
            "and": [
              { "attribute": "api.name",         "op": "=", "value": "getAccountHolders" },
              { "attribute": "http.status_code", "op": "=", "value": 200 }
            ]
          },
          "order": [{ "field": "started_at", "dir": "desc" }],
          "limit": 100,
          "offset": 0
        }
    headers:
      - name: Content-Type
        value: application/json
    _type: request

  - _id: req_search_ilike_prefix
    parentId: fld_search
    created: 1754511489101
    modified: 1754511489101
    name: Search - ILIKE prefix (AND)
    description: api.name ilike 'create%' in last 24h
    method: POST
    url: "{{ base_url }}/api/search/events"
    body:
      mimeType: application/json
      text: |
        {
          "service": "{{ service_id }}",
          "event": "{{ event_name }}",
          "period": { "previous": "-24h" },
          "match": {
            "and": [
              { "attribute": "api.name",    "op": "ilike", "value": "create%" },
              { "attribute": "http.method", "op": "=",     "value": "GET" }
            ]
          },
          "order": [{ "field": "started_at", "dir": "desc" }],
          "limit": 200
        }
    headers:
      - name: Content-Type
        value: application/json
    _type: request

  - _id: req_search_like_sub_ne
    parentId: fld_search
    created: 1754511489102
    modified: 1754511489102
    name: Search - LIKE substring + != (AND)
    description: LIKE '%account%' and status_code != 500 between time window
    method: POST
    url: "{{ base_url }}/api/search/events"
    body:
      mimeType: application/json
      text: |
        {
          "service": "{{ service_id }}",
          "event": "{{ event_name }}",
          "period": { "between": ["2025-09-15T00:00:00Z", "2025-09-15T06:00:00Z"] },
          "match": {
            "and": [
              { "attribute": "api.name",         "op": "like", "value": "%account%" },
              { "attribute": "http.status_code", "op": "!=",   "value": 500 }
            ]
          },
          "order": [{ "field": "started_at", "dir": "desc" }],
          "limit": 100
        }
    headers:
      - name: Content-Type
        value: application/json
    _type: request

  - _id: req_search_category
    parentId: fld_search
    created: 1754511489103
    modified: 1754511489103
    name: Search - Category filter (full-event)
    description: Filter by registry metadata event.subCategory (not in attributes)
    method: POST
    url: "{{ base_url }}/api/search/events"
    body:
      mimeType: application/json
      text: |
        {
          "service": "{{ service_id }}",
          "event": "{{ event_name }}",
          "period": { "previous": "-1h" },
          "filter": { "path": "event.subCategory", "op": "=", "value": "http.server" },
          "order": [{ "field": "started_at", "dir": "desc" }],
          "limit": 50
        }
    headers:
      - name: Content-Type
        value: application/json
    _type: request

  - _id: req_search_corr_id
    parentId: fld_search
    created: 1754511489104
    modified: 1754511489104
    name: Search - CorrelationId (filter)
    description: Filter by correlation id via attribute path (envelope projection)
    method: POST
    url: "{{ base_url }}/api/search/events"
    body:
      mimeType: application/json
      text: |
        {
          "service": "{{ service_id }}",
          "event": "{{ event_name }}",
          "period": { "previous": "-15m" },
          "filter": { "path": "attributes.obsinity.correlation_id", "op": "=", "value": "{{ correlation_id }}" },
          "order": [{ "field": "started_at", "dir": "desc" }],
          "limit": 25
        }
    headers:
      - name: Content-Type
        value: application/json
    _type: request

  - _id: req_search_pagination
    parentId: fld_search
    created: 1754511489105
    modified: 1754511489105
    name: Search - Pagination (page 2)
    description: Second page using offset
    method: POST
    url: "{{ base_url }}/api/search/events"
    body:
      mimeType: application/json
      text: |
        {
          "service": "{{ service_id }}",
          "event": "{{ event_name }}",
          "period": { "previous": "-1h" },
          "match": { "attribute": "http.status_code", "op": "=", "value": 200 },
          "order": [{ "field": "started_at", "dir": "desc" }],
          "limit": 25,
          "offset": 25
        }
    headers:
      - name: Content-Type
        value: application/json
    _type: request

  - _id: req_search_filter_or
    parentId: fld_search
    created: 1754511489106
    modified: 1754511489106
    name: Search - Filter OR (full-event)
    description: Full-event OR filter with ilike patterns
    method: POST
    url: "{{ base_url }}/api/search/events"
    body:
      mimeType: application/json
      text: |
        {
          "service": "{{ service_id }}",
          "event": "{{ event_name }}",
          "period": { "previous": "-24h" },
          "match": [
            { "attribute": "http.method", "op": "=", "value": "GET" }
          ],
          "filter": {
            "or": [
              { "path": "attributes.api.name", "op": "ilike", "value": "create%" },
              { "path": "attributes.api.name", "op": "ilike", "value": "update%" }
            ]
          },
          "order": [{ "field": "started_at", "dir": "desc" }],
          "limit": 100
        }
    headers:
      - name: Content-Type
        value: application/json
    _type: request

  - _id: req_search_filter_nested
    parentId: fld_search
    created: 1754511489107
    modified: 1754511489107
    name: Search - Filter Nested (AND/OR)
    description: Nested AND with inner OR on full-event paths
    method: POST
    url: "{{ base_url }}/api/search/events"
    body:
      mimeType: application/json
      text: |
        {
          "service": "{{ service_id }}",
          "event": "{{ event_name }}",
          "period": { "between": ["2025-09-15T00:00:00Z", "2025-09-15T06:00:00Z"] },
          "match": [
            { "attribute": "http.status_code", "op": "!=", "value": 500 }
          ],
          "filter": {
            "and": [
              { "path": "attributes.client.ip", "op": "!=", "value": "10.0.0.1" },
              { "or": [
                  { "path": "attributes.api.name", "op": "like",  "value": "%account%" },
                  { "path": "attributes.api.name", "op": "ilike", "value": "create%" }
                ]
              }
            ]
          },
          "order": [{ "field": "started_at", "dir": "desc" }],
          "limit": 100
        }
    headers:
      - name: Content-Type
        value: application/json
    _type: request

  - _id: req_search_match_or
    parentId: fld_search
    created: 1754511489108
    modified: 1754511489108
    name: Search - Match OR (indexed)
    description: Indexed OR over match conditions
    method: POST
    url: "{{ base_url }}/api/search/events"
    body:
      mimeType: application/json
      text: |
        {
          "service": "{{ service_id }}",
          "event": "{{ event_name }}",
          "period": { "previous": "-6h" },
          "match": {
            "or": [
              { "attribute": "http.status_code", "op": "=", "value": 200 },
              { "attribute": "http.status_code", "op": "=", "value": 201 }
            ]
          },
          "order": [{ "field": "started_at", "dir": "desc" }],
          "limit": 100
        }
    headers:
      - name: Content-Type
        value: application/json
    _type: request

  - _id: req_search_match_and_or
    parentId: fld_search
    created: 1754511489109
    modified: 1754511489109
    name: Search - Match AND with nested OR
    description: Indexed AND with inner OR over equality conditions
    method: POST
    url: "{{ base_url }}/api/search/events"
    body:
      mimeType: application/json
      text: |
        {
          "service": "{{ service_id }}",
          "event": "{{ event_name }}",
          "period": { "since": "-1h" },
          "match": {
            "and": [
              { "attribute": "api.name", "op": "=", "value": "getAccountHolders" },
              {
                "or": [
                  { "attribute": "http.status_code", "op": "=", "value": 200 },
                  { "attribute": "http.status_code", "op": "=", "value": 201 }
                ]
              }
            ]
          },
          "order": [ { "field": "started_at", "dir": "desc" } ],
          "limit": 100,
          "offset": 0
        }
    headers:
      - name: Content-Type
        value: application/json
    _type: request

  # ===================== OBJQL =====================
  - _id: req_objql_query_basic
    parentId: fld_objql
    created: 1754511489150
    modified: 1754511489150
    name: OBJQL - Raw query
    description: Execute a raw OB-JQL string (same DSL used by the search JSON surface).
    method: POST
    url: "{{ base_url }}/api/objql/query"
    body:
      mimeType: application/json
      text: |
        {
          "q": "service:\"{{ service_id }}\" event:\"{{ event_name }}\"\nwhere attr.http.status_code = 200\nsince -1h\norder by started_at desc\nlimit 25",
          "offset": 0,
          "limit": 25
        }
    headers:
      - name: Content-Type
        value: application/json
    _type: request

  # ===================== Catalog =====================
  - _id: req_catalog_create_type
    parentId: fld_catalog
    created: 1754511489190
    modified: 1754511489190
    name: Catalog - Create event type
    description: Ensure an event type exists with an optional description.
    method: POST
    url: "{{ base_url }}/api/catalog/event-type/{{ event_name }}"
    body:
      mimeType: application/json
      text: |
        {
          "description": "Demo payments HTTP request event"
        }
    headers:
      - name: Content-Type
        value: application/json
    _type: request

  - _id: req_catalog_add_index
    parentId: fld_catalog
    created: 1754511489191
    modified: 1754511489191
    name: Catalog - Add attribute index path
    description: Register an indexed attribute path for the event type.
    method: POST
    url: "{{ base_url }}/api/catalog/event-type/{{ event_name }}/index"
    body:
      mimeType: application/json
      text: |
        {
          "path": "api.name"
        }
    headers:
      - name: Content-Type
        value: application/json
    _type: request

  - _id: req_catalog_list_types
    parentId: fld_catalog
    created: 1754511489192
    modified: 1754511489192
    name: Catalog - List event types
    description: List all registered event types for the service catalog.
    method: GET
    url: "{{ base_url }}/api/catalog/event-type"
    body: {}
    headers: []
    _type: request

  - _id: req_attr_values_api_name
    parentId: fld_catalog
    created: 1754511489200
    modified: 1754511489200
    name: Catalog - Attribute values (api.name)
    description: List distinct values for api.name under the service with optional prefix filter.
    method: GET
    url: "{{ base_url }}/api/catalog/attributes/{{ service_id }}/api.name/values?prefix=get&limit=25"
    body: {}
    headers: []
    _type: request

  - _id: req_attr_values_http_status
    parentId: fld_catalog
    created: 1754511489201
    modified: 1754511489201
    name: Catalog - Attribute values (http.status_code)
    description: List distinct values for http.status_code under the service.
    method: GET
    url: "{{ base_url }}/api/catalog/attributes/{{ service_id }}/http.status_code/values?limit=25"
    body: {}
    headers: []
    _type: request

  - _id: req_attr_names_all
    parentId: fld_catalog
    created: 1754511489202
    modified: 1754511489202
    name: Catalog - Attribute names (all)
    description: List distinct attribute names for the service.
    method: GET
    url: "{{ base_url }}/api/catalog/attributes/{{ service_id }}/names?limit=100"
    body: {}
    headers: []
    _type: request

  - _id: req_attr_names_prefix_http
    parentId: fld_catalog
    created: 1754511489203
    modified: 1754511489203
    name: Catalog - Attribute names (prefix http.)
    description: List attribute names with prefix filter.
    method: GET
    url: "{{ base_url }}/api/catalog/attributes/{{ service_id }}/names?prefix=http.&limit=100"
    body: {}
    headers: []
    _type: request

  # ===================== Admin =====================
  - _id: req_admin_ready
    parentId: fld_admin
    created: 1754511489250
    modified: 1754511489250
    name: Admin - Ready probe
    description: Ping the admin config surface (returns plain text OK).
    method: GET
    url: "{{ base_url }}/api/admin/config/ready"
    body: {}
    headers: []
    _type: request

  - _id: req_admin_config_service
    parentId: fld_admin
    created: 1754511489251
    modified: 1754511489251
    name: Admin - Ingest service config (JSON)
    description: Upload a full service configuration snapshot as JSON.
    method: POST
    url: "{{ base_url }}/api/admin/config/service"
    body:
      mimeType: application/json
      text: |
        {
          "service": "{{ service_id }}",
          "snapshotId": "{{ config_snapshot_id }}",
          "createdAt": "{{ nowIso }}",
          "defaults": {
            "rollups": ["1m", "5m"],
            "backfillWindow": "7d"
          },
          "events": [
            {
              "uuid": "{{ event_id }}",
              "eventName": "{{ event_name }}",
              "category": "payments",
              "metrics": [
                {
                  "uuid": "{{ event_id_1 }}",
                  "name": "{{ config_metric_name }}",
                  "type": "HISTOGRAM",
                  "specJson": {
                    "unit": "{{ config_metric_unit }}",
                    "buckets": [50, 100, 250, 500]
                  },
                  "rollups": ["p50", "p95"],
                  "backfillWindow": "7d"
                }
              ],
              "attributeIndex": {
                "uuid": "{{ event_id_2 }}",
                "specJson": {
                  "indexed": ["api.name", "http.status_code"]
                }
              }
            }
          ]
        }
    headers:
      - name: Content-Type
        value: application/json
    _type: request

  - _id: req_admin_config_import
    parentId: fld_admin
    created: 1754511489252
    modified: 1754511489252
    name: Admin - Import service config archive
    description: Multipart upload of a `.tar.gz` bundle (services/<svc>/events/...). Attach a local archive file.
    method: POST
    url: "{{ base_url }}/api/admin/configs/import?mode=upsert"
    body:
      mimeType: multipart/form-data
      params:
        - id: pair_admin_import_file
          name: file
          type: file
          fileName: ./service-config.tar.gz
    headers: []
    _type: request

  # ===================== System =====================
  - _id: req_health
    parentId: fld_system
    created: 1754511489300
    modified: 1754511489300
    name: Health
    description: Spring Boot actuator health.
    method: GET
    url: "{{ base_url }}/actuator/health"
    body: {}
    headers: []
    _type: request
